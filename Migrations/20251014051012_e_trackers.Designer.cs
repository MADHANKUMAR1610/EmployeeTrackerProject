// <auto-generated />
using System;
using EmployeeTracker.Datas;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmployeeTracker.Migrations
{
    [DbContext(typeof(EmployeeTrackerDbContext))]
    [Migration("20251014051012_e_trackers")]
    partial class e_trackers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmployeeTracker.Models.Break", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("BreakDurationMinutes")
                        .HasColumnType("float");

                    b.Property<DateTime?>("BreakEndTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BreakStartTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkSessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkSessionId");

                    b.ToTable("Breaks");
                });

            modelBuilder.Entity("EmployeeTracker.Models.EmpTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssigneeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AssigneeId");

                    b.HasIndex("EmpId");

                    b.ToTable("EmpTask");
                });

            modelBuilder.Entity("EmployeeTracker.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Mail = "test@example.com",
                            Name = "Test User",
                            Password = "Test@123",
                            ProfilePictureUrl = "https://placehold.co/100x100",
                            Role = "Developer"
                        });
                });

            modelBuilder.Entity("EmployeeTracker.Models.LeaveBalance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("LeaveType")
                        .HasColumnType("int");

                    b.Property<int>("TotalLeave")
                        .HasColumnType("int");

                    b.Property<int>("UsedLeave")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("LeaveBalances");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmpId = 1,
                            LeaveType = 0,
                            TotalLeave = 12,
                            UsedLeave = 0
                        },
                        new
                        {
                            Id = 2,
                            EmpId = 1,
                            LeaveType = 1,
                            TotalLeave = 12,
                            UsedLeave = 0
                        },
                        new
                        {
                            Id = 3,
                            EmpId = 1,
                            LeaveType = 4,
                            TotalLeave = 5,
                            UsedLeave = 0
                        },
                        new
                        {
                            Id = 4,
                            EmpId = 1,
                            LeaveType = 3,
                            TotalLeave = 52,
                            UsedLeave = 0
                        },
                        new
                        {
                            Id = 5,
                            EmpId = 1,
                            LeaveType = 2,
                            TotalLeave = 52,
                            UsedLeave = 0
                        });
                });

            modelBuilder.Entity("EmployeeTracker.Models.LeaveRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LeaveType")
                        .HasColumnType("int");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("LeaveRequests");
                });

            modelBuilder.Entity("EmployeeTracker.Models.WorkSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("LoginTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LogoutTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalWorkedHours")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("WorkSessions");
                });

            modelBuilder.Entity("EmployeeTracker.Models.Break", b =>
                {
                    b.HasOne("EmployeeTracker.Models.WorkSession", "WorkSession")
                        .WithMany("Breaks")
                        .HasForeignKey("WorkSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkSession");
                });

            modelBuilder.Entity("EmployeeTracker.Models.EmpTask", b =>
                {
                    b.HasOne("EmployeeTracker.Models.Employee", "Assignee")
                        .WithMany("TasksAssigned")
                        .HasForeignKey("AssigneeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EmployeeTracker.Models.Employee", "Employee")
                        .WithMany("TasksCreated")
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Assignee");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeTracker.Models.LeaveBalance", b =>
                {
                    b.HasOne("EmployeeTracker.Models.Employee", "Employee")
                        .WithMany("LeaveBalances")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeTracker.Models.LeaveRequest", b =>
                {
                    b.HasOne("EmployeeTracker.Models.Employee", "Employee")
                        .WithMany("LeaveRequests")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeTracker.Models.WorkSession", b =>
                {
                    b.HasOne("EmployeeTracker.Models.Employee", "Employee")
                        .WithMany("WorkSessions")
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("EmployeeTracker.Models.Employee", b =>
                {
                    b.Navigation("LeaveBalances");

                    b.Navigation("LeaveRequests");

                    b.Navigation("TasksAssigned");

                    b.Navigation("TasksCreated");

                    b.Navigation("WorkSessions");
                });

            modelBuilder.Entity("EmployeeTracker.Models.WorkSession", b =>
                {
                    b.Navigation("Breaks");
                });
#pragma warning restore 612, 618
        }
    }
}
